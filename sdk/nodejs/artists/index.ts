// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ArtistArgs, ArtistState } from "./artist";
export type Artist = import("./artist").Artist;
export const Artist: typeof import("./artist").Artist = null as any;
utilities.lazyLoad(exports, ["Artist"], () => require("./artist"));

export { GetArtistArgs, GetArtistResult, GetArtistOutputArgs } from "./getArtist";
export const getArtist: typeof import("./getArtist").getArtist = null as any;
export const getArtistOutput: typeof import("./getArtist").getArtistOutput = null as any;
utilities.lazyLoad(exports, ["getArtist","getArtistOutput"], () => require("./getArtist"));

export { GetArtistsResult } from "./getArtists";
export const getArtists: typeof import("./getArtists").getArtists = null as any;
utilities.lazyLoad(exports, ["getArtists"], () => require("./getArtists"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "lidarr:Artists/artist:Artist":
                return new Artist(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("lidarr", "Artists/artist", _module)
