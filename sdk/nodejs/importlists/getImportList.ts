// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Import Lists -->Single Import List.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as lidarr from "@pulumi/lidarr";
 *
 * const example = lidarr.ImportLists.getImportList({
 *     name: "Example",
 * });
 * ```
 */
export function getImportList(args: GetImportListArgs, opts?: pulumi.InvokeOptions): Promise<GetImportListResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lidarr:ImportLists/getImportList:getImportList", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getImportList.
 */
export interface GetImportListArgs {
    /**
     * Import List name.
     */
    name: string;
}

/**
 * A collection of values returned by getImportList.
 */
export interface GetImportListResult {
    /**
     * Access token.
     */
    readonly accessToken: string;
    /**
     * API key.
     */
    readonly apiKey: string;
    /**
     * Base URL.
     */
    readonly baseUrl: string;
    /**
     * ImportList configuration template.
     */
    readonly configContract: string;
    /**
     * Elements to pull from list.
     */
    readonly countList: number;
    /**
     * Enable automatic add flag.
     */
    readonly enableAutomaticAdd: boolean;
    /**
     * Expires.
     */
    readonly expires: string;
    /**
     * Import List ID.
     */
    readonly id: number;
    /**
     * ImportList implementation name.
     */
    readonly implementation: string;
    /**
     * List ID.
     */
    readonly listId: string;
    /**
     * List order.
     */
    readonly listOrder: number;
    /**
     * List type.
     */
    readonly listType: string;
    /**
     * Metadata profile ID.
     */
    readonly metadataProfileId: number;
    /**
     * Monitor new items.
     */
    readonly monitorNewItems: string;
    /**
     * Import List name.
     */
    readonly name: string;
    /**
     * Playlist IDs.
     */
    readonly playlistIds: string[];
    /**
     * Profile IDs.
     */
    readonly profileIds: number[];
    /**
     * Quality profile ID.
     */
    readonly qualityProfileId: number;
    /**
     * Refresh token.
     */
    readonly refreshToken: string;
    /**
     * Root folder path.
     */
    readonly rootFolderPath: string;
    /**
     * Series ID.
     */
    readonly seriesId: string;
    /**
     * Should monitor.
     */
    readonly shouldMonitor: string;
    /**
     * Should monitor existing flag.
     */
    readonly shouldMonitorExisting: boolean;
    /**
     * Should search flag.
     */
    readonly shouldSearch: boolean;
    /**
     * Tag ID.
     */
    readonly tagId: string;
    /**
     * Tag IDs.
     */
    readonly tagIds: number[];
    /**
     * List of associated tags.
     */
    readonly tags: number[];
    /**
     * User ID.
     */
    readonly userId: string;
}
/**
 * <!-- subcategory:Import Lists -->Single Import List.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as lidarr from "@pulumi/lidarr";
 *
 * const example = lidarr.ImportLists.getImportList({
 *     name: "Example",
 * });
 * ```
 */
export function getImportListOutput(args: GetImportListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImportListResult> {
    return pulumi.output(args).apply((a: any) => getImportList(a, opts))
}

/**
 * A collection of arguments for invoking getImportList.
 */
export interface GetImportListOutputArgs {
    /**
     * Import List name.
     */
    name: pulumi.Input<string>;
}
