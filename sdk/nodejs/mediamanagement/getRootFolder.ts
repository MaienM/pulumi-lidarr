// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Media Management -->Single Root Folder.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as lidarr from "@pulumi/lidarr";
 *
 * const example = lidarr.MediaManagement.getRootFolder({
 *     path: "/music",
 * });
 * ```
 */
export function getRootFolder(args: GetRootFolderArgs, opts?: pulumi.InvokeOptions): Promise<GetRootFolderResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("lidarr:MediaManagement/getRootFolder:getRootFolder", {
        "path": args.path,
    }, opts);
}

/**
 * A collection of arguments for invoking getRootFolder.
 */
export interface GetRootFolderArgs {
    /**
     * Root Folder absolute path.
     */
    path: string;
}

/**
 * A collection of values returned by getRootFolder.
 */
export interface GetRootFolderResult {
    /**
     * Access flag.
     */
    readonly accessible: boolean;
    /**
     * Root Folder ID.
     */
    readonly id: number;
    /**
     * Metadata profile ID.
     */
    readonly metadataProfileId: number;
    /**
     * Monitor option.
     */
    readonly monitorOption: string;
    /**
     * Root Folder friendly name.
     */
    readonly name: string;
    /**
     * New item monitor option.
     */
    readonly newItemMonitorOption: string;
    /**
     * Root Folder absolute path.
     */
    readonly path: string;
    /**
     * Quality profile ID.
     */
    readonly qualityProfileId: number;
    /**
     * List of associated tags.
     */
    readonly tags: number[];
}
/**
 * <!-- subcategory:Media Management -->Single Root Folder.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as lidarr from "@pulumi/lidarr";
 *
 * const example = lidarr.MediaManagement.getRootFolder({
 *     path: "/music",
 * });
 * ```
 */
export function getRootFolderOutput(args: GetRootFolderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRootFolderResult> {
    return pulumi.output(args).apply((a: any) => getRootFolder(a, opts))
}

/**
 * A collection of arguments for invoking getRootFolder.
 */
export interface GetRootFolderOutputArgs {
    /**
     * Root Folder absolute path.
     */
    path: pulumi.Input<string>;
}
